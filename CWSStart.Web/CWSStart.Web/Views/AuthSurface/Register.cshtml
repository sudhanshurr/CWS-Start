@using System.Web.Mvc.Html
@using CWSStart.Web.CWSExtensions
@using Umbraco.Web
@using CWSStart.Web.Controllers
@using CWSStart.Web.Models
@model RegisterViewModel

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@if (Convert.ToBoolean(TempData["IsSuccessful"]))
{
    <div class="alert alert-success">
        <h4>@DictionaryHelper.GetDictItem("Success","Yay!")</h4>
        <p>@DictionaryHelper.GetDictItem("YouHaveRegistered","You have now registered - please verify your email address to continue")</p>
    </div>
}
else
{
    using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)

        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, DictionaryHelper.GetDictItem("LabelName","Navn"), new { @class = "control-label"})
                @Html.TextBoxFor(model => model.Name, new{ @class = "form-control", placeholder = DictionaryHelper.GetDictItem("PlaceHolderYourName","Your Name") })
                @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class= "help-block" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, DictionaryHelper.GetDictItem("LabelEmailAddress","Email address"), new { @class = "control-label"})
                @Html.TextBoxFor(model => model.EmailAddress, new{ @class = "form-control", placeholder = DictionaryHelper.GetDictItem("PlaceHolderEmailAddress","Email Address") })
                @Html.ValidationMessageFor(model => model.EmailAddress, string.Empty, new { @class= "help-block" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Password, DictionaryHelper.GetDictItem("LabelPassword","Password"), new { @class = "control-label"})
                @Html.PasswordFor(model => model.Password, new{ @class = "form-control", placeholder = DictionaryHelper.GetDictItem("PlaceHolderPassword","Password") })
                @Html.ValidationMessageFor(model => model.Password, string.Empty, new { @class= "help-block" })
            </div>
        
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, DictionaryHelper.GetDictItem("LabelConfirmPassword","Confirm password"), new { @class = "control-label"})
                @Html.PasswordFor(model => model.ConfirmPassword, new{ @class = "form-control", placeholder = DictionaryHelper.GetDictItem("PlaceHolderConfirmPassword","Confirm Password") })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, string.Empty, new { @class= "help-block" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.ProfileURL, new { @class = "control-label"})
                <div class="input-group">
                    <span class="input-group-addon">http://site.co.uk/user/</span>
                    @Html.TextBoxFor(model => model.ProfileURL, new {@class = "form-control", placeholder = "joebloggs"})
                </div>
                @Html.ValidationMessageFor(model => model.ProfileURL, string.Empty, new { @class= "help-block" })
            </div>
            
            <button type="submit" class="btn btn-default">@DictionaryHelper.GetDictItem("ButtonRegister","Register")</button>
        
        </fieldset>
    }
}